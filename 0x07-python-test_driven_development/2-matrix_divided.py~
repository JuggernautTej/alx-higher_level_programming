#!/usr/bin/python3
"""This function matrix_divided takes two arguments, a matrix
as list of integers or floats and an integer/float"""


def matrix_divided(matrix, div):
    """This function  divides the elements of a matrix by a number.
    Args:
    matrix (list): The first parameter, a list of integers or floats.
    div (int or float): The second parameter

    Returns:
    matrix of the result of the division.
    """
    if not isinstance(matrix, list) or not all(isinstance(row, list)
                                               for row in matrix):
        raise TypeError("matrix must be a matrix (list of lists of integers/floats")
    if div == 0:
        raise ZeroDivisionError("division by zero")
    if not (isinstance(div, (int, float))):
        raise TypeError("div must be a number")
    result = []
    row_len = len(matrix[0])
    for row in matrix:
        if row_len != len(row):
            raise TypeError("Each row of the matrix must have the same size")
        if not all(isinstance(element, (int, float)) for element in row):
            raise TypeError("matrix must be a matrix (list of lists of integers/floats)")
        result_element = [round((element / div), 2) for element in row]
        result.append(result_element)
    return result
